{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { RequestStatus } from '@store/shared';\nvar initialState = {\n  list: {\n    fetching: false,\n    data: []\n  },\n  addToCart: {\n    status: RequestStatus.Idle\n  },\n  removeFromCart: {\n    status: RequestStatus.Idle\n  },\n  updateCartQuantity: {\n    status: RequestStatus.Idle\n  }\n};\n\nvar getCartRequest = function getCartRequest(state) {\n  delete state.list.error;\n  state.list.fetching = true;\n};\n\nvar getCartSuccess = function getCartSuccess(state, _ref) {\n  var payload = _ref.payload;\n  state.list.data = payload.data;\n  state.list.fetching = false;\n};\n\nvar getCartFailed = function getCartFailed(state, _ref2) {\n  var payload = _ref2.payload;\n  state.list.error = payload;\n  state.list.fetching = false;\n};\n\nvar addToCartRequest = function addToCartRequest(state) {\n  delete state.addToCart.error;\n  state.addToCart.status = RequestStatus.Loading;\n};\n\nvar addToCartSuccess = function addToCartSuccess(state) {\n  state.addToCart.status = RequestStatus.Success;\n};\n\nvar addToCartFailed = function addToCartFailed(state, _ref3) {\n  var payload = _ref3.payload;\n  state.addToCart.error = payload;\n  state.addToCart.status = RequestStatus.Failed;\n};\n\nvar removeFromCartRequest = function removeFromCartRequest(state) {\n  delete state.removeFromCart.error;\n  state.removeFromCart.status = RequestStatus.Loading;\n};\n\nvar removeFromCartSuccess = function removeFromCartSuccess(state) {\n  state.removeFromCart.status = RequestStatus.Success;\n};\n\nvar removeFromCartFailed = function removeFromCartFailed(state, _ref4) {\n  var payload = _ref4.payload;\n  state.removeFromCart.error = payload;\n  state.removeFromCart.status = RequestStatus.Failed;\n};\n\nvar updateCartQuantityRequest = function updateCartQuantityRequest(state) {\n  delete state.updateCartQuantity.error;\n  state.updateCartQuantity.status = RequestStatus.Loading;\n};\n\nvar updateCartQuantitySuccess = function updateCartQuantitySuccess(state) {\n  state.updateCartQuantity.status = RequestStatus.Success;\n};\n\nvar updateCartQuantityFailed = function updateCartQuantityFailed(state, _ref5) {\n  var payload = _ref5.payload;\n  state.updateCartQuantity.error = payload;\n  state.updateCartQuantity.status = RequestStatus.Failed;\n};\n\nvar cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialState,\n  reducers: {\n    getCartRequest: getCartRequest,\n    getCartSuccess: getCartSuccess,\n    getCartFailed: getCartFailed,\n    addToCartRequest: addToCartRequest,\n    addToCartSuccess: addToCartSuccess,\n    addToCartFailed: addToCartFailed,\n    removeFromCartRequest: removeFromCartRequest,\n    removeFromCartSuccess: removeFromCartSuccess,\n    removeFromCartFailed: removeFromCartFailed,\n    updateCartQuantityRequest: updateCartQuantityRequest,\n    updateCartQuantitySuccess: updateCartQuantitySuccess,\n    updateCartQuantityFailed: updateCartQuantityFailed\n  }\n});\nexport var cartActions = cartSlice.actions;\nexport var cartReducer = cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/Ian/Desktop/ECPI CIS/CIS453/Week 1/Lab/CIS435 React Lab/main/source/src/store/slices/cart.ts"],"names":["createSlice","RequestStatus","initialState","list","fetching","data","addToCart","status","Idle","removeFromCart","updateCartQuantity","getCartRequest","state","error","getCartSuccess","payload","getCartFailed","addToCartRequest","Loading","addToCartSuccess","Success","addToCartFailed","Failed","removeFromCartRequest","removeFromCartSuccess","removeFromCartFailed","updateCartQuantityRequest","updateCartQuantitySuccess","updateCartQuantityFailed","cartSlice","name","reducers","cartActions","actions","cartReducer","reducer"],"mappings":"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","sourcesContent":["import { CaseReducer, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RequestStatus, ResponseState, ResponseStatus } from '@store/shared';\nimport { ProductItem } from '@store/slices/products';\n\nexport interface CartItem extends ProductItem {\n  cartQuantity: number;\n}\n\nexport interface AddToCartBody extends ProductItem {\n  cartQuantity: number;\n}\n\nexport interface UpdateCartQuantityBody {\n  id: number | string;\n  cartQuantity: number;\n}\n\ninterface CartState {\n  list: ResponseState<CartItem>;\n  addToCart: ResponseStatus;\n  removeFromCart: ResponseStatus;\n  updateCartQuantity: ResponseStatus;\n}\n\nconst initialState: CartState = {\n  list: { fetching: false, data: [] },\n  addToCart: { status: RequestStatus.Idle },\n  removeFromCart: { status: RequestStatus.Idle },\n  updateCartQuantity: { status: RequestStatus.Idle },\n};\n\nconst getCartRequest: CaseReducer<CartState> = (state) => {\n  delete state.list.error;\n  state.list.fetching = true;\n};\n\nconst getCartSuccess: CaseReducer<CartState, PayloadAction<ResponseState<CartItem>>> = (state, { payload }) => {\n  state.list.data = payload.data;\n  state.list.fetching = false;\n};\n\nconst getCartFailed: CaseReducer<CartState, PayloadAction<string>> = (state, { payload }) => {\n  state.list.error = payload;\n  state.list.fetching = false;\n};\n\nconst addToCartRequest: CaseReducer<CartState> = (state) => {\n  delete state.addToCart.error;\n  state.addToCart.status = RequestStatus.Loading;\n};\n\nconst addToCartSuccess: CaseReducer<CartState> = (state) => {\n  state.addToCart.status = RequestStatus.Success;\n};\n\nconst addToCartFailed: CaseReducer<CartState, PayloadAction<string>> = (state, { payload }) => {\n  state.addToCart.error = payload;\n  state.addToCart.status = RequestStatus.Failed;\n};\n\nconst removeFromCartRequest: CaseReducer<CartState> = (state) => {\n  delete state.removeFromCart.error;\n  state.removeFromCart.status = RequestStatus.Loading;\n};\n\nconst removeFromCartSuccess: CaseReducer<CartState> = (state) => {\n  state.removeFromCart.status = RequestStatus.Success;\n};\n\nconst removeFromCartFailed: CaseReducer<CartState, PayloadAction<string>> = (state, { payload }) => {\n  state.removeFromCart.error = payload;\n  state.removeFromCart.status = RequestStatus.Failed;\n};\n\nconst updateCartQuantityRequest: CaseReducer<CartState> = (state) => {\n  delete state.updateCartQuantity.error;\n  state.updateCartQuantity.status = RequestStatus.Loading;\n};\n\nconst updateCartQuantitySuccess: CaseReducer<CartState> = (state) => {\n  state.updateCartQuantity.status = RequestStatus.Success;\n};\n\nconst updateCartQuantityFailed: CaseReducer<CartState, PayloadAction<string>> = (state, { payload }) => {\n  state.updateCartQuantity.error = payload;\n  state.updateCartQuantity.status = RequestStatus.Failed;\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    getCartRequest,\n    getCartSuccess,\n    getCartFailed,\n\n    addToCartRequest,\n    addToCartSuccess,\n    addToCartFailed,\n\n    removeFromCartRequest,\n    removeFromCartSuccess,\n    removeFromCartFailed,\n\n    updateCartQuantityRequest,\n    updateCartQuantitySuccess,\n    updateCartQuantityFailed,\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport const cartReducer = cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}