{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  list: {\n    fetching: false,\n    data: []\n  },\n  related: {\n    fetching: false,\n    data: []\n  },\n  categories: {\n    fetching: false,\n    data: []\n  },\n  detail: {\n    fetching: false\n  }\n};\n\nconst getProductsRequest = (state, {\n  payload\n}) => {\n  if (payload.loadingMore) {\n    state.list.loadingMore = true;\n    return;\n  }\n\n  state.list.fetching = true;\n  delete state.list.error;\n};\n\nconst getProductsSuccess = (state, {\n  payload\n}) => {\n  if (state.list.loadingMore) {\n    state.list.data = [...state.list.data, ...payload.data];\n    state.list.loadingMore = false;\n  } else {\n    state.list.data = payload.data;\n    state.list.fetching = false;\n  }\n\n  state.list.meta = payload.meta;\n};\n\nconst getProductsFailed = (state, {\n  payload\n}) => {\n  state.list.loadingMore = false;\n  state.list.fetching = false;\n  state.list.error = payload;\n};\n\nconst getRelatedProductsRequest = state => {\n  state.related.fetching = true;\n  delete state.related.error;\n};\n\nconst getRelatedProductsSuccess = (state, {\n  payload\n}) => {\n  state.related.data = payload.data;\n  state.related.fetching = false;\n  state.related.meta = payload.meta;\n};\n\nconst getRelatedProductsFailed = (state, {\n  payload\n}) => {\n  state.related.fetching = false;\n  state.related.error = payload;\n};\n\nconst getProductCategoriesRequest = state => {\n  delete state.categories.error;\n  state.categories.fetching = true;\n};\n\nconst getProductCategoriesSuccess = (state, {\n  payload\n}) => {\n  state.categories.data = payload.data;\n  state.categories.meta = payload.meta;\n  state.categories.fetching = false;\n};\n\nconst getProductCategoriesFailed = (state, {\n  payload\n}) => {\n  state.categories.error = payload;\n  state.categories.fetching = false;\n};\n\nconst getProductDetailRequest = state => {\n  delete state.detail.error;\n  state.detail.fetching = true;\n};\n\nconst getProductDetailSuccess = (state, {\n  payload\n}) => {\n  state.detail.fetching = false;\n  state.detail.data = payload;\n};\n\nconst getProductDetailFailed = (state, {\n  payload\n}) => {\n  delete state.detail.error;\n  state.detail.fetching = true;\n  state.detail.error = payload;\n};\n\nconst productsSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    getProductsRequest,\n    getProductsSuccess,\n    getProductsFailed,\n    getProductCategoriesRequest,\n    getProductCategoriesSuccess,\n    getProductCategoriesFailed,\n    getProductDetailRequest,\n    getProductDetailSuccess,\n    getProductDetailFailed,\n    getRelatedProductsRequest,\n    getRelatedProductsSuccess,\n    getRelatedProductsFailed\n  }\n});\nexport const productActions = productsSlice.actions;\nexport const productReducer = productsSlice.reducer;","map":{"version":3,"sources":["C:/Users/Ian/Desktop/ECPI CIS/CIS453/Week 1/Lab/gute-main/main/source/src/store/slices/products.ts"],"names":["createSlice","initialState","list","fetching","data","related","categories","detail","getProductsRequest","state","payload","loadingMore","error","getProductsSuccess","meta","getProductsFailed","getRelatedProductsRequest","getRelatedProductsSuccess","getRelatedProductsFailed","getProductCategoriesRequest","getProductCategoriesSuccess","getProductCategoriesFailed","getProductDetailRequest","getProductDetailSuccess","getProductDetailFailed","productsSlice","name","reducers","productActions","actions","productReducer","reducer"],"mappings":"AAAA,SAAsBA,WAAtB,QAAwD,kBAAxD;AA+CA,MAAMC,YAA0B,GAAG;AACjCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GAD2B;AAEjCC,EAAAA,OAAO,EAAE;AAAEF,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GAFwB;AAGjCE,EAAAA,UAAU,EAAE;AAAEH,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GAHqB;AAIjCG,EAAAA,MAAM,EAAE;AAAEJ,IAAAA,QAAQ,EAAE;AAAZ;AAJyB,CAAnC;;AAOA,MAAMK,kBAAmF,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAwB;AAClH,MAAIA,OAAO,CAACC,WAAZ,EAAyB;AACvBF,IAAAA,KAAK,CAACP,IAAN,CAAWS,WAAX,GAAyB,IAAzB;AACA;AACD;;AACDF,EAAAA,KAAK,CAACP,IAAN,CAAWC,QAAX,GAAsB,IAAtB;AACA,SAAOM,KAAK,CAACP,IAAN,CAAWU,KAAlB;AACD,CAPD;;AASA,MAAMC,kBAAwF,GAAG,CAC/FJ,KAD+F,EAE/F;AAAEC,EAAAA;AAAF,CAF+F,KAG5F;AACH,MAAID,KAAK,CAACP,IAAN,CAAWS,WAAf,EAA4B;AAC1BF,IAAAA,KAAK,CAACP,IAAN,CAAWE,IAAX,GAAkB,CAAC,GAAGK,KAAK,CAACP,IAAN,CAAWE,IAAf,EAAqB,GAAGM,OAAO,CAACN,IAAhC,CAAlB;AACAK,IAAAA,KAAK,CAACP,IAAN,CAAWS,WAAX,GAAyB,KAAzB;AACD,GAHD,MAGO;AACLF,IAAAA,KAAK,CAACP,IAAN,CAAWE,IAAX,GAAkBM,OAAO,CAACN,IAA1B;AACAK,IAAAA,KAAK,CAACP,IAAN,CAAWC,QAAX,GAAsB,KAAtB;AACD;;AACDM,EAAAA,KAAK,CAACP,IAAN,CAAWY,IAAX,GAAkBJ,OAAO,CAACI,IAA1B;AACD,CAZD;;AAcA,MAAMC,iBAAmE,GAAG,CAACN,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAwB;AAClGD,EAAAA,KAAK,CAACP,IAAN,CAAWS,WAAX,GAAyB,KAAzB;AACAF,EAAAA,KAAK,CAACP,IAAN,CAAWC,QAAX,GAAsB,KAAtB;AACAM,EAAAA,KAAK,CAACP,IAAN,CAAWU,KAAX,GAAmBF,OAAnB;AACD,CAJD;;AAMA,MAAMM,yBAAoD,GAAIP,KAAD,IAAW;AACtEA,EAAAA,KAAK,CAACJ,OAAN,CAAcF,QAAd,GAAyB,IAAzB;AACA,SAAOM,KAAK,CAACJ,OAAN,CAAcO,KAArB;AACD,CAHD;;AAKA,MAAMK,yBAA+F,GAAG,CACtGR,KADsG,EAEtG;AAAEC,EAAAA;AAAF,CAFsG,KAGnG;AACHD,EAAAA,KAAK,CAACJ,OAAN,CAAcD,IAAd,GAAqBM,OAAO,CAACN,IAA7B;AACAK,EAAAA,KAAK,CAACJ,OAAN,CAAcF,QAAd,GAAyB,KAAzB;AACAM,EAAAA,KAAK,CAACJ,OAAN,CAAcS,IAAd,GAAqBJ,OAAO,CAACI,IAA7B;AACD,CAPD;;AASA,MAAMI,wBAA0E,GAAG,CAACT,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAwB;AACzGD,EAAAA,KAAK,CAACJ,OAAN,CAAcF,QAAd,GAAyB,KAAzB;AACAM,EAAAA,KAAK,CAACJ,OAAN,CAAcO,KAAd,GAAsBF,OAAtB;AACD,CAHD;;AAKA,MAAMS,2BAAsD,GAAIV,KAAD,IAAW;AACxE,SAAOA,KAAK,CAACH,UAAN,CAAiBM,KAAxB;AACAH,EAAAA,KAAK,CAACH,UAAN,CAAiBH,QAAjB,GAA4B,IAA5B;AACD,CAHD;;AAKA,MAAMiB,2BAAyG,GAAG,CAChHX,KADgH,EAEhH;AAAEC,EAAAA;AAAF,CAFgH,KAG7G;AACHD,EAAAA,KAAK,CAACH,UAAN,CAAiBF,IAAjB,GAAwBM,OAAO,CAACN,IAAhC;AACAK,EAAAA,KAAK,CAACH,UAAN,CAAiBQ,IAAjB,GAAwBJ,OAAO,CAACI,IAAhC;AACAL,EAAAA,KAAK,CAACH,UAAN,CAAiBH,QAAjB,GAA4B,KAA5B;AACD,CAPD;;AASA,MAAMkB,0BAA4E,GAAG,CAACZ,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAwB;AAC3GD,EAAAA,KAAK,CAACH,UAAN,CAAiBM,KAAjB,GAAyBF,OAAzB;AACAD,EAAAA,KAAK,CAACH,UAAN,CAAiBH,QAAjB,GAA4B,KAA5B;AACD,CAHD;;AAKA,MAAMmB,uBAAkD,GAAIb,KAAD,IAAW;AACpE,SAAOA,KAAK,CAACF,MAAN,CAAaK,KAApB;AACAH,EAAAA,KAAK,CAACF,MAAN,CAAaJ,QAAb,GAAwB,IAAxB;AACD,CAHD;;AAKA,MAAMoB,uBAA8E,GAAG,CAACd,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAwB;AAC7GD,EAAAA,KAAK,CAACF,MAAN,CAAaJ,QAAb,GAAwB,KAAxB;AACAM,EAAAA,KAAK,CAACF,MAAN,CAAaH,IAAb,GAAoBM,OAApB;AACD,CAHD;;AAKA,MAAMc,sBAAwE,GAAG,CAACf,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAwB;AACvG,SAAOD,KAAK,CAACF,MAAN,CAAaK,KAApB;AACAH,EAAAA,KAAK,CAACF,MAAN,CAAaJ,QAAb,GAAwB,IAAxB;AACAM,EAAAA,KAAK,CAACF,MAAN,CAAaK,KAAb,GAAqBF,OAArB;AACD,CAJD;;AAMA,MAAMe,aAAa,GAAGzB,WAAW,CAAC;AAChC0B,EAAAA,IAAI,EAAE,SAD0B;AAEhCzB,EAAAA,YAFgC;AAGhC0B,EAAAA,QAAQ,EAAE;AACRnB,IAAAA,kBADQ;AAERK,IAAAA,kBAFQ;AAGRE,IAAAA,iBAHQ;AAKRI,IAAAA,2BALQ;AAMRC,IAAAA,2BANQ;AAORC,IAAAA,0BAPQ;AASRC,IAAAA,uBATQ;AAURC,IAAAA,uBAVQ;AAWRC,IAAAA,sBAXQ;AAaRR,IAAAA,yBAbQ;AAcRC,IAAAA,yBAdQ;AAeRC,IAAAA;AAfQ;AAHsB,CAAD,CAAjC;AAsBA,OAAO,MAAMU,cAAc,GAAGH,aAAa,CAACI,OAArC;AACP,OAAO,MAAMC,cAAc,GAAGL,aAAa,CAACM,OAArC","sourcesContent":["import { CaseReducer, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { QueryParams, ResponseState, ResponseStateDetail } from '@store/shared';\nimport { UserItem } from './posts';\n\nexport interface ProductCategoryItem {\n  id: number;\n  name: string;\n}\n\nexport interface ProductReviewItem {\n  id: 1;\n  publicDate: Date;\n  rate: number;\n  content: string;\n  user: UserItem;\n}\n\nexport interface ProductItem {\n  id: number | string;\n  name: string;\n  brand: string;\n  rate: number;\n  price: number;\n  discountPrice: number;\n  description?: string;\n  quantity?: number;\n  cover: string;\n  images: string[];\n  tags?: { id: number; name: string }[];\n  categories: ProductCategoryItem;\n  reviews: ProductReviewItem[];\n  sku: string;\n}\n\nexport interface GetProductsListParams extends QueryParams {\n  'categories.id_like'?: string | null;\n  price_gte?: number | null;\n  price_lte?: number | null;\n}\n\ninterface ProductState {\n  list: ResponseState<ProductItem>;\n  related: ResponseState<ProductItem>;\n  categories: ResponseState<ProductCategoryItem>;\n  detail: ResponseStateDetail<ProductItem>;\n}\n\nconst initialState: ProductState = {\n  list: { fetching: false, data: [] },\n  related: { fetching: false, data: [] },\n  categories: { fetching: false, data: [] },\n  detail: { fetching: false },\n};\n\nconst getProductsRequest: CaseReducer<ProductState, PayloadAction<GetProductsListParams>> = (state, { payload }) => {\n  if (payload.loadingMore) {\n    state.list.loadingMore = true;\n    return;\n  }\n  state.list.fetching = true;\n  delete state.list.error;\n};\n\nconst getProductsSuccess: CaseReducer<ProductState, PayloadAction<ResponseState<ProductItem>>> = (\n  state,\n  { payload },\n) => {\n  if (state.list.loadingMore) {\n    state.list.data = [...state.list.data, ...payload.data];\n    state.list.loadingMore = false;\n  } else {\n    state.list.data = payload.data;\n    state.list.fetching = false;\n  }\n  state.list.meta = payload.meta;\n};\n\nconst getProductsFailed: CaseReducer<ProductState, PayloadAction<string>> = (state, { payload }) => {\n  state.list.loadingMore = false;\n  state.list.fetching = false;\n  state.list.error = payload;\n};\n\nconst getRelatedProductsRequest: CaseReducer<ProductState> = (state) => {\n  state.related.fetching = true;\n  delete state.related.error;\n};\n\nconst getRelatedProductsSuccess: CaseReducer<ProductState, PayloadAction<ResponseState<ProductItem>>> = (\n  state,\n  { payload },\n) => {\n  state.related.data = payload.data;\n  state.related.fetching = false;\n  state.related.meta = payload.meta;\n};\n\nconst getRelatedProductsFailed: CaseReducer<ProductState, PayloadAction<string>> = (state, { payload }) => {\n  state.related.fetching = false;\n  state.related.error = payload;\n};\n\nconst getProductCategoriesRequest: CaseReducer<ProductState> = (state) => {\n  delete state.categories.error;\n  state.categories.fetching = true;\n};\n\nconst getProductCategoriesSuccess: CaseReducer<ProductState, PayloadAction<ResponseState<ProductCategoryItem>>> = (\n  state,\n  { payload },\n) => {\n  state.categories.data = payload.data;\n  state.categories.meta = payload.meta;\n  state.categories.fetching = false;\n};\n\nconst getProductCategoriesFailed: CaseReducer<ProductState, PayloadAction<string>> = (state, { payload }) => {\n  state.categories.error = payload;\n  state.categories.fetching = false;\n};\n\nconst getProductDetailRequest: CaseReducer<ProductState> = (state) => {\n  delete state.detail.error;\n  state.detail.fetching = true;\n};\n\nconst getProductDetailSuccess: CaseReducer<ProductState, PayloadAction<ProductItem>> = (state, { payload }) => {\n  state.detail.fetching = false;\n  state.detail.data = payload;\n};\n\nconst getProductDetailFailed: CaseReducer<ProductState, PayloadAction<string>> = (state, { payload }) => {\n  delete state.detail.error;\n  state.detail.fetching = true;\n  state.detail.error = payload;\n};\n\nconst productsSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    getProductsRequest,\n    getProductsSuccess,\n    getProductsFailed,\n\n    getProductCategoriesRequest,\n    getProductCategoriesSuccess,\n    getProductCategoriesFailed,\n\n    getProductDetailRequest,\n    getProductDetailSuccess,\n    getProductDetailFailed,\n\n    getRelatedProductsRequest,\n    getRelatedProductsSuccess,\n    getRelatedProductsFailed,\n  },\n});\n\nexport const productActions = productsSlice.actions;\nexport const productReducer = productsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}