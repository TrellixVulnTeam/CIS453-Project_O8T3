{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport GUButton from '@components/control/gu-button';\nimport React, { useEffect } from 'react';\nimport Modal from 'react-modal';\n\nconst AlertModal = (_ref) => {\n  let {\n    height = 'auto',\n    width = 400,\n    onCancelClick,\n    onConfirmClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"height\", \"width\", \"onCancelClick\", \"onConfirmClick\"]);\n\n  useEffect(() => {\n    Modal.setAppElement('#modal');\n  }, []);\n  return /*#__PURE__*/_jsx(Modal, _objectSpread(_objectSpread({\n    style: {\n      overlay: {\n        zIndex: 1000\n      },\n      content: {\n        border: 0,\n        height: height,\n        width: width,\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        boxShadow: '0px 0px 16px 0px rgb(0 0 0 / 8%)',\n        transform: 'translate(-50%, -50%)'\n      }\n    },\n    contentLabel: \"Example Modal\"\n  }, props), {}, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"alert-modal\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"alert-modal-header\",\n        children: [/*#__PURE__*/_jsx(\"h3\", {\n          children: \"Confirm actions\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          children: \"Are you sure to do this action\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"alert-modal-footer\",\n        children: [/*#__PURE__*/_jsx(GUButton, {\n          shape: \"round\",\n          size: \"small\",\n          variant: \"contained\",\n          color: \"error\",\n          onClick: onCancelClick,\n          children: \"Cancel\"\n        }), /*#__PURE__*/_jsx(GUButton, {\n          shape: \"round\",\n          size: \"small\",\n          variant: \"contained\",\n          color: \"success\",\n          onClick: onConfirmClick,\n          children: \"Ok\"\n        })]\n      })]\n    })\n  }));\n};\n\nexport default AlertModal;","map":null,"metadata":{},"sourceType":"module"}