{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport ConnectionInstance from './connection-instance';\nexport const getCarts = params => ConnectionInstance.get('cart', {\n  params\n});\nexport const addToCart = product => ConnectionInstance.post('cart', product);\nexport const updateCartQuantity = (_ref) => {\n  let {\n    id\n  } = _ref,\n      data = _objectWithoutProperties(_ref, [\"id\"]);\n\n  return ConnectionInstance.patch('cart/' + id, data);\n};\nexport const removeFromCart = id => ConnectionInstance.delete('cart/' + id);","map":{"version":3,"sources":["C:/Users/Ian/Desktop/ECPI CIS/CIS453/Week 1/Lab/gute-main/main/source/src/services/cart.ts"],"names":["ConnectionInstance","getCarts","params","get","addToCart","product","post","updateCartQuantity","id","data","patch","removeFromCart","delete"],"mappings":";;;;AAGA,OAAOA,kBAAP,MAA+B,uBAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAIC,MAAD,IAA0BF,kBAAkB,CAACG,GAAnB,CAAuB,MAAvB,EAA+B;AAAED,EAAAA;AAAF,CAA/B,CAA3C;AAEP,OAAO,MAAME,SAAS,GAAIC,OAAD,IAAuBL,kBAAkB,CAACM,IAAnB,CAAwB,MAAxB,EAAgCD,OAAhC,CAAzC;AAEP,OAAO,MAAME,kBAAkB,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,MAAUC,IAAV;;AAAA,SAChCT,kBAAkB,CAACU,KAAnB,CAAyB,UAAUF,EAAnC,EAAuCC,IAAvC,CADgC;AAAA,CAA3B;AAGP,OAAO,MAAME,cAAc,GAAIH,EAAD,IAAyBR,kBAAkB,CAACY,MAAnB,CAA0B,UAAUJ,EAApC,CAAhD","sourcesContent":["import { QueryParams } from '@store/shared';\nimport { AddToCartBody, CartItem, UpdateCartQuantityBody } from '@store/slices/cart';\nimport { ProductItem } from '@store/slices/products';\nimport ConnectionInstance from './connection-instance';\n\nexport const getCarts = (params?: QueryParams) => ConnectionInstance.get('cart', { params });\n\nexport const addToCart = (product: CartItem) => ConnectionInstance.post('cart', product);\n\nexport const updateCartQuantity = ({ id, ...data }: UpdateCartQuantityBody) =>\n  ConnectionInstance.patch('cart/' + id, data);\n\nexport const removeFromCart = (id: number | string) => ConnectionInstance.delete('cart/' + id);\n"]},"metadata":{},"sourceType":"module"}