{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport ConnectionInstance from './connection-instance';\nexport const getCarts = params => ConnectionInstance.get('cart', {\n  params\n});\nexport const addToCart = product => ConnectionInstance.post('cart', product);\nexport const updateCartQuantity = (_ref) => {\n  let {\n    id\n  } = _ref,\n      data = _objectWithoutProperties(_ref, [\"id\"]);\n\n  return ConnectionInstance.patch('cart/' + id, data);\n};\nexport const removeFromCart = id => ConnectionInstance.delete('cart/' + id);","map":null,"metadata":{},"sourceType":"module"}