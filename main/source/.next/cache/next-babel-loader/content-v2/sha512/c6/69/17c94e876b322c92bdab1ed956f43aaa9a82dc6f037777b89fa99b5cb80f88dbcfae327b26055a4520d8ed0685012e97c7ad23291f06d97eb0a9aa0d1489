{"ast":null,"code":"export let RequestStatus;\n\n(function (RequestStatus) {\n  RequestStatus[RequestStatus[\"Idle\"] = 0] = \"Idle\";\n  RequestStatus[RequestStatus[\"Loading\"] = 1] = \"Loading\";\n  RequestStatus[RequestStatus[\"Success\"] = 2] = \"Success\";\n  RequestStatus[RequestStatus[\"Failed\"] = 3] = \"Failed\";\n})(RequestStatus || (RequestStatus = {}));","map":{"version":3,"sources":["C:/Users/Ian/Desktop/ECPI CIS/CIS453/Week 1/Lab/gute-main/main/source/src/store/shared/index.ts"],"names":["RequestStatus"],"mappings":"AAOA,WAAYA,aAAZ;;WAAYA,a;AAAAA,EAAAA,a,CAAAA,a;AAAAA,EAAAA,a,CAAAA,a;AAAAA,EAAAA,a,CAAAA,a;AAAAA,EAAAA,a,CAAAA,a;GAAAA,a,KAAAA,a","sourcesContent":["export interface ResponeMeta {\n  total: number;\n  page: number;\n  take: number;\n  pageCount: number;\n}\n\nexport enum RequestStatus {\n  Idle,\n  Loading,\n  Success,\n  Failed\n}\nexport interface ResponseStatus {\n  fetching?: boolean;\n  error?: string;\n  status?: RequestStatus;\n}\n\nexport interface ResponseState<T> extends ResponseStatus {\n  data: T[];\n  meta?: ResponeMeta;\n  loadingMore?: boolean;\n}\n\nexport interface ResponseStateDetail<T> {\n  fetching?: boolean;\n  data?: T;\n  error?: string;\n}\n\nexport interface QueryParams {\n  //NOTE: You should change this interface to conform your backend API, currently i'm using json server for demo purpose\n  _sort?: string;\n  _order?: string;\n  _start?: number;\n  _end?: number;\n  _page?: number;\n  _limit?: number;\n  q?: string;\n  loadingMore?: boolean;\n}\n"]},"metadata":{},"sourceType":"module"}