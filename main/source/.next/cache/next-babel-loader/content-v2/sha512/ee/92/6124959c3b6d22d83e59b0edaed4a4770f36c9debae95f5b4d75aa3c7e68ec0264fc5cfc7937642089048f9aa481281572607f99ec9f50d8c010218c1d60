{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ian\\\\Desktop\\\\ECPI CIS\\\\CIS453\\\\Week 1\\\\Lab\\\\gute-main\\\\main\\\\source\\\\src\\\\components\\\\post-detail\\\\content\\\\comments\\\\index.tsx\";\nimport React, { useState } from 'react';\nimport PostCommentItemDetail from './comment-item';\nimport { useSelector } from 'react-redux';\nimport Loading from '@components/other/loading';\nimport GUButton from '@components/control/gu-button';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().email('Please enter a valid email').required('Email is required'),\n  website: Yup.string().required('Website is required'),\n  message: Yup.string().required('Please leave your message')\n});\n\nconst PostCommentComments = () => {\n  var _data$comments, _data$comments2, _data$comments3;\n\n  const {\n    data,\n    fetching\n  } = useSelector(state => state.posts.detail);\n  const {\n    0: isSubmited,\n    1: setIsSubmited\n  } = useState(false);\n  const initialValues = {\n    name: '',\n    email: '',\n    website: '',\n    message: ''\n  };\n\n  const handleFormSubmit = val => {\n    setIsSubmited(true);\n  };\n\n  return fetching ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-comment\",\n    children: [(data === null || data === void 0 ? void 0 : (_data$comments = data.comments) === null || _data$comments === void 0 ? void 0 : _data$comments.length) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"post-comment-title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [data === null || data === void 0 ? void 0 : (_data$comments2 = data.comments) === null || _data$comments2 === void 0 ? void 0 : _data$comments2.length, \" comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-comment-detail\",\n        children: data === null || data === void 0 ? void 0 : (_data$comments3 = data.comments) === null || _data$comments3 === void 0 ? void 0 : _data$comments3.map(item => /*#__PURE__*/_jsxDEV(PostCommentItemDetail, {\n          data: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"post-comment-title\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Leave a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-comment-form\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: handleFormSubmit,\n        validationSchema: FormSchema,\n        children: ({\n          values,\n          touched,\n          errors,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        }) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-12 col-sm-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      value: values.name,\n                      type: \"text\",\n                      placeholder: \"Name\",\n                      name: \"name\",\n                      onChange: handleChange,\n                      onBlur: handleBlur\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 25\n                    }, this), errors.name && touched.name && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"error\",\n                      children: errors.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-12 col-sm-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      value: values.email,\n                      placeholder: \"Email\",\n                      name: \"email\",\n                      onChange: handleChange,\n                      onBlur: handleBlur\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 25\n                    }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"error\",\n                      children: errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 59\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-12 col-sm-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      value: values.website,\n                      type: \"text\",\n                      placeholder: \"Webiste\",\n                      name: \"website\",\n                      onChange: handleChange,\n                      onBlur: handleBlur\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 25\n                    }, this), errors.website && touched.website && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"error\",\n                      children: errors.website\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 63\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: values.message,\n                  cols: 30,\n                  rows: 5,\n                  placeholder: \"Messages\",\n                  name: \"message\",\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), errors.message && touched.message && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error\",\n                  children: errors.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"center\",\n              children: /*#__PURE__*/_jsxDEV(GUButton, {\n                disabled: isSubmited,\n                onClick: () => handleSubmit(),\n                variant: \"contained\",\n                shape: \"round\",\n                children: isSubmited ? 'Submited' : 'Submit'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostCommentComments;","map":{"version":3,"sources":["C:/Users/Ian/Desktop/ECPI CIS/CIS453/Week 1/Lab/gute-main/main/source/src/components/post-detail/content/comments/index.tsx"],"names":["React","useState","PostCommentItemDetail","useSelector","Loading","GUButton","Formik","Yup","FormSchema","object","shape","name","string","required","email","website","message","PostCommentComments","data","fetching","state","posts","detail","isSubmited","setIsSubmited","initialValues","handleFormSubmit","val","comments","length","map","item","values","touched","errors","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PostCommentItemDetail from './comment-item';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '@store';\nimport Loading from '@components/other/loading';\nimport GUButton from '@components/control/gu-button';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().email('Please enter a valid email').required('Email is required'),\n  website: Yup.string().required('Website is required'),\n  message: Yup.string().required('Please leave your message'),\n});\n\ninterface FormProps {\n  name: string;\n  email: string;\n  website: string;\n  message: string;\n}\n\nconst PostCommentComments = () => {\n  const { data, fetching } = useSelector((state: AppState) => state.posts.detail);\n\n  const [isSubmited, setIsSubmited] = useState(false);\n\n  const initialValues = {\n    name: '',\n    email: '',\n    website: '',\n    message: '',\n  };\n\n  const handleFormSubmit = (val: FormProps) => {\n    setIsSubmited(true);\n  };\n\n  return fetching ? (\n    <Loading />\n  ) : (\n    <div className=\"post-comment\">\n      {data?.comments?.length && (\n        <>\n          <h3 className=\"post-comment-title\">\n            <span>{data?.comments?.length} comments</span>\n          </h3>\n          <div className=\"post-comment-detail\">\n            {data?.comments?.map((item) => (\n              <PostCommentItemDetail data={item} />\n            ))}\n          </div>\n        </>\n      )}\n\n      <h3 className=\"post-comment-title\">\n        <span>Leave a comment</span>\n      </h3>\n      <div className=\"post-comment-form\">\n        <Formik initialValues={initialValues} onSubmit={handleFormSubmit} validationSchema={FormSchema}>\n          {({ values, touched, errors, handleChange, handleBlur, handleSubmit }) => {\n            return (\n              <>\n                <form>\n                  <div className=\"row\">\n                    <div className=\"col-12 col-sm-4\">\n                      <div className=\"input-group\">\n                        <input\n                          value={values.name}\n                          type=\"text\"\n                          placeholder=\"Name\"\n                          name=\"name\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        {errors.name && touched.name && <span className=\"error\">{errors.name}</span>}\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-sm-4\">\n                      <div className=\"input-group\">\n                        <input\n                          type=\"email\"\n                          value={values.email}\n                          placeholder=\"Email\"\n                          name=\"email\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        {errors.email && touched.email && <span className=\"error\">{errors.email}</span>}\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-sm-4\">\n                      <div className=\"input-group\">\n                        <input\n                          value={values.website}\n                          type=\"text\"\n                          placeholder=\"Webiste\"\n                          name=\"website\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        {errors.website && touched.website && <span className=\"error\">{errors.website}</span>}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"input-group\">\n                    <textarea\n                      value={values.message}\n                      cols={30}\n                      rows={5}\n                      placeholder=\"Messages\"\n                      name=\"message\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {errors.message && touched.message && <span className=\"error\">{errors.message}</span>}\n                  </div>\n                </form>\n                <div className=\"center\">\n                  <GUButton disabled={isSubmited} onClick={() => handleSubmit()} variant=\"contained\" shape=\"round\">\n                    {isSubmited ? 'Submited' : 'Submit'}\n                  </GUButton>\n                </div>\n              </>\n            );\n          }}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default PostCommentComments;\n"]},"metadata":{},"sourceType":"module"}