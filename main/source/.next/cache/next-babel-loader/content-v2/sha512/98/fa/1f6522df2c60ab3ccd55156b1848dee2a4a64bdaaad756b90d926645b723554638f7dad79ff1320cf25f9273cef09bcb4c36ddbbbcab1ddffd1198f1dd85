{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ian\\\\Desktop\\\\ECPI CIS\\\\CIS453\\\\Week 1\\\\Lab\\\\gute-main\\\\main\\\\source\\\\src\\\\components\\\\subcribe-card\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Formik } from 'formik';\nimport React from 'react';\nimport * as Yup from 'yup';\nimport GUButton from '@components/control/gu-button';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport { renderThemeClass } from '@common/functions';\nconst FormSchema = Yup.object().shape({\n  email: Yup.string().email('Please type validate email format').required('Please provide an email')\n});\nconst StyledGUButton = styled(GUButton)`\n  text-transform: uppercase;\n`;\n\nconst SubcribeCard = (_ref) => {\n  let {\n    theme,\n    colored\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"theme\", \"colored\"]);\n\n  return /*#__PURE__*/_jsxDEV(Formik, _objectSpread(_objectSpread({\n    validationSchema: FormSchema,\n    initialValues: {\n      email: ''\n    }\n  }, props), {}, {\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classNames('subcribe-card', renderThemeClass(theme), {\n        '-colored': colored\n      }),\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Subcribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lorem ipsum dolor amet, consectetur adipiscing elit, sed tempor.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email,\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledGUButton, {\n        weight: \"medium\",\n        buttonType: \"submit\",\n        variant: \"contained\",\n        color: theme,\n        shape: \"round\",\n        size: \"small\",\n        fullwidth: true,\n        children: \"Subcribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SubcribeCard;","map":{"version":3,"sources":["C:/Users/Ian/Desktop/ECPI CIS/CIS453/Week 1/Lab/gute-main/main/source/src/components/subcribe-card/index.tsx"],"names":["Formik","React","Yup","GUButton","styled","classNames","renderThemeClass","FormSchema","object","shape","email","string","required","StyledGUButton","SubcribeCard","theme","colored","props","values","errors","touched","handleChange","handleBlur","handleSubmit"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,MAAT,QAAqC,QAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,MAAMC,UAAU,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AACpCC,EAAAA,KAAK,EAAER,GAAG,CAACS,MAAJ,GAAaD,KAAb,CAAmB,mCAAnB,EAAwDE,QAAxD,CAAiE,yBAAjE;AAD6B,CAAnB,CAAnB;AAQA,MAAMC,cAAc,GAAGT,MAAM,CAACD,QAAD,CAAW;AACxC;AACA,CAFA;;AAIA,MAAMW,YAAY,GAAG,UAOf;AAAA,MAPgB;AACpBC,IAAAA,KADoB;AAEpBC,IAAAA;AAFoB,GAOhB;AAAA,MAJDC,KAIC;;AACJ,sBACE,QAAC,MAAD;AAAQ,IAAA,gBAAgB,EAAEV,UAA1B;AAAsC,IAAA,aAAa,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT;AAArD,KAAwEO,KAAxE;AAAA,cACG,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,MAAV;AAAkBC,MAAAA,OAAlB;AAA2BC,MAAAA,YAA3B;AAAyCC,MAAAA,UAAzC;AAAqDC,MAAAA;AAArD,KAAD,kBACC;AACE,MAAA,SAAS,EAAElB,UAAU,CAAC,eAAD,EAAkBC,gBAAgB,CAACS,KAAD,CAAlC,EAA2C;AAAE,oBAAYC;AAAd,OAA3C,CADvB;AAEE,MAAA,QAAQ,EAAEO,YAFZ;AAAA,8BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,QAAQ,EAAEF,YAHZ;AAIE,UAAA,MAAM,EAAEC,UAJV;AAKE,UAAA,KAAK,EAAEJ,MAAM,CAACR,KALhB;AAME,UAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,gBADF,EASGS,MAAM,CAACT,KAAP,IAAgBU,OAAO,CAACV,KAAxB,iBAAiC;AAAA,oBAAOS,MAAM,CAACT;AAAd;AAAA;AAAA;AAAA;AAAA,gBATpC;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAgBE,QAAC,cAAD;AACE,QAAA,MAAM,EAAC,QADT;AAEE,QAAA,UAAU,EAAC,QAFb;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,KAAK,EAAEK,KAJT;AAKE,QAAA,KAAK,EAAC,OALR;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,SAAS,MAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAzCD;;AA2CA,eAAeD,YAAf","sourcesContent":["import { Formik, FormikConfig } from 'formik';\nimport React from 'react';\nimport * as Yup from 'yup';\nimport GUButton from '@components/control/gu-button';\nimport styled from 'styled-components';\nimport { ThemeVariation } from '@common/enum';\nimport classNames from 'classnames';\nimport { renderThemeClass } from '@common/functions';\n\nconst FormSchema = Yup.object().shape({\n  email: Yup.string().email('Please type validate email format').required('Please provide an email'),\n});\n\nexport interface SubcribeCardFormProps {\n  email: string;\n}\n\nconst StyledGUButton = styled(GUButton)`\n  text-transform: uppercase;\n`;\n\nconst SubcribeCard = ({\n  theme,\n  colored,\n  ...props\n}: Omit<FormikConfig<SubcribeCardFormProps>, 'initialValues' | 'validationSchema'> & {\n  theme?: ThemeVariation;\n  colored?: boolean;\n}) => {\n  return (\n    <Formik validationSchema={FormSchema} initialValues={{ email: '' }} {...props}>\n      {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n        <form\n          className={classNames('subcribe-card', renderThemeClass(theme), { '-colored': colored })}\n          onSubmit={handleSubmit}>\n          <h5>Subcribe</h5>\n          <p>Lorem ipsum dolor amet, consectetur adipiscing elit, sed tempor.</p>\n          <div className=\"input-group\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            {errors.email && touched.email && <span>{errors.email}</span>}\n          </div>\n          <StyledGUButton\n            weight=\"medium\"\n            buttonType=\"submit\"\n            variant=\"contained\"\n            color={theme}\n            shape=\"round\"\n            size=\"small\"\n            fullwidth>\n            Subcribe\n          </StyledGUButton>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SubcribeCard;\n"]},"metadata":{},"sourceType":"module"}