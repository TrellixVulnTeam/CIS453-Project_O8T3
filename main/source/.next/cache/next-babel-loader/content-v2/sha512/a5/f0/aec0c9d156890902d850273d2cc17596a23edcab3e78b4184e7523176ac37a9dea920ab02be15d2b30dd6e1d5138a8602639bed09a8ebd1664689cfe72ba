{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ian\\\\Desktop\\\\ECPI CIS\\\\CIS453\\\\Week 1\\\\Lab\\\\CIS435 React Lab\\\\main\\\\source\\\\src\\\\components\\\\posts-layout\\\\masonry-three-column.tsx\";\nimport React, { useEffect } from 'react';\nimport PostStardard from '@components/post/post-stardard';\nimport Masonry from 'react-masonry-css';\nimport styled from 'styled-components';\nimport GUButton from '@components/control/gu-button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { handleGetPosts } from '@store/thunk/post';\nimport Loading from '@components/other/loading';\nconst PostsContainer = styled.div`\n  margin-bottom: ${50 / 14}rem;\n`;\nconst ButtonContaier = styled.div`\n  text-align: center;\n`;\nconst StyledButton = styled(GUButton)`\n  text-transform: uppercase;\n`;\n\nconst PostListMasonryThreeColumn = ({\n  theme\n}) => {\n  const dispatch = useDispatch();\n  const PAGE_SIZE = 6;\n  const types = 'image|slide|split';\n  const {\n    data,\n    fetching,\n    meta,\n    loadingMore\n  } = useSelector(state => state.posts.list);\n  useEffect(() => {\n    dispatch(handleGetPosts({\n      _limit: PAGE_SIZE,\n      type_like: types\n    }));\n  }, []);\n  const breakpointColumnsObj = {\n    default: 3,\n    768: 2,\n    576: 1\n  };\n\n  const onLoadingMore = () => {\n    if (meta && data.length && meta.page < meta.pageCount) {\n      dispatch(handleGetPosts({\n        _limit: PAGE_SIZE,\n        type_like: types,\n        _page: meta.page + 1,\n        loadingMore: true\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: fetching ? /*#__PURE__*/_jsxDEV(Loading, {\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PostsContainer, {\n        children: /*#__PURE__*/_jsxDEV(Masonry, {\n          breakpointCols: breakpointColumnsObj,\n          className: \"masonry-grid\",\n          columnClassName: \"masonry-grid_column\",\n          children: data === null || data === void 0 ? void 0 : data.map((item, index) => /*#__PURE__*/_jsxDEV(PostStardard, {\n            className: \"-center\",\n            data: item,\n            theme: theme\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), meta && meta.page < meta.pageCount && /*#__PURE__*/_jsxDEV(ButtonContaier, {\n        children: /*#__PURE__*/_jsxDEV(StyledButton, {\n          disabled: loadingMore,\n          preffix: loadingMore && /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fal fa-spinner-third\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 41\n          }, this),\n          onClick: onLoadingMore,\n          variant: \"contained\",\n          color: theme,\n          shape: \"round\",\n          weight: \"bold\",\n          children: \"Load more posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostListMasonryThreeColumn;","map":{"version":3,"sources":["C:/Users/Ian/Desktop/ECPI CIS/CIS453/Week 1/Lab/CIS435 React Lab/main/source/src/components/posts-layout/masonry-three-column.tsx"],"names":["React","useEffect","PostStardard","Masonry","styled","GUButton","useSelector","useDispatch","handleGetPosts","Loading","PostsContainer","div","ButtonContaier","StyledButton","PostListMasonryThreeColumn","theme","dispatch","PAGE_SIZE","types","data","fetching","meta","loadingMore","state","posts","list","_limit","type_like","breakpointColumnsObj","default","onLoadingMore","length","page","pageCount","_page","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PostStardard from '@components/post/post-stardard';\nimport Masonry from 'react-masonry-css';\nimport styled from 'styled-components';\nimport GUButton from '@components/control/gu-button';\nimport { ThemeVariation } from '@common/enum';\nimport { AppState } from '@store';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { renderThemeClass } from '@common/functions';\nimport classNames from 'classnames';\nimport { handleGetPosts } from '@store/thunk/post';\nimport Loading from '@components/other/loading';\n\nconst PostsContainer = styled.div`\n  margin-bottom: ${50 / 14}rem;\n`;\n\nconst ButtonContaier = styled.div`\n  text-align: center;\n`;\n\nconst StyledButton = styled(GUButton)`\n  text-transform: uppercase;\n`;\n\nconst PostListMasonryThreeColumn = ({ theme }: { theme?: ThemeVariation }) => {\n  const dispatch = useDispatch();\n  const PAGE_SIZE = 6;\n  const types = 'image|slide|split';\n\n  const { data, fetching, meta, loadingMore } = useSelector((state: AppState) => state.posts.list);\n\n  useEffect(() => {\n    dispatch(handleGetPosts({ _limit: PAGE_SIZE, type_like: types }));\n  }, []);\n\n  const breakpointColumnsObj = {\n    default: 3,\n    768: 2,\n    576: 1,\n  };\n\n  const onLoadingMore = () => {\n    if (meta && data.length && meta.page < meta.pageCount) {\n      dispatch(handleGetPosts({ _limit: PAGE_SIZE, type_like: types, _page: meta.page + 1, loadingMore: true }));\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {fetching ? (\n        <Loading theme={theme} />\n      ) : (\n        <>\n          <PostsContainer>\n            <Masonry\n              breakpointCols={breakpointColumnsObj}\n              className=\"masonry-grid\"\n              columnClassName=\"masonry-grid_column\">\n              {data?.map((item: any, index: number) => (\n                <PostStardard className=\"-center\" key={index} data={item} theme={theme} />\n              ))}\n            </Masonry>\n          </PostsContainer>\n          {meta && meta.page < meta.pageCount && (\n            <ButtonContaier>\n              <StyledButton\n                disabled={loadingMore}\n                preffix={loadingMore && <i className=\"fal fa-spinner-third\" />}\n                onClick={onLoadingMore}\n                variant=\"contained\"\n                color={theme}\n                shape=\"round\"\n                weight=\"bold\">\n                Load more posts\n              </StyledButton>\n            </ButtonContaier>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PostListMasonryThreeColumn;\n"]},"metadata":{},"sourceType":"module"}