{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ian\\\\Desktop\\\\ECPI CIS\\\\CIS453\\\\Week 1\\\\Lab\\\\CIS435 React Lab\\\\main\\\\source\\\\src\\\\pages\\\\_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ThemeProvider } from 'styled-components';\nimport '@styles/styles.scss';\nimport theme from '@theme';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport store from '@store';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useEffect } from 'react';\nimport { commonActions } from '@store/slices/common';\nimport { handlePostCategories } from '@store/thunk/post';\nimport { handleGetCart } from '@store/thunk/cart';\nimport { handleGetProductCategories } from '@store/thunk/products';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const WrappedComponent = () => {\n    const dispatch = useDispatch();\n    const {\n      visible,\n      message,\n      type\n    } = useSelector(state => state.common.toast);\n    useEffect(() => {\n      dispatch(handlePostCategories());\n      dispatch(handleGetCart());\n      dispatch(handleGetProductCategories());\n    }, []);\n    useEffect(() => {\n      if (visible) {\n        toast[type || 'info'](message, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          onClose: () => dispatch(commonActions.hideToast())\n        });\n      }\n    }, [visible]);\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: 1500,\n        style: {\n          minHeight: 50\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(WrappedComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Ian/Desktop/ECPI CIS/CIS453/Week 1/Lab/CIS435 React Lab/main/source/src/pages/_app.tsx"],"names":["ThemeProvider","theme","Provider","useSelector","useDispatch","store","ToastContainer","toast","useEffect","commonActions","handlePostCategories","handleGetCart","handleGetProductCategories","MyApp","Component","pageProps","WrappedComponent","dispatch","visible","message","type","state","common","position","POSITION","BOTTOM_LEFT","onClose","hideToast","minHeight"],"mappings":";;;;;;;;;AAAA,SAASA,aAAT,QAA8B,mBAA9B;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,aAAnD;AACA,OAAOC,KAAP,MAAgC,QAAhC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,0BAAT,QAA2C,uBAA3C;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAA6E;AAC3E,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,UAAM;AAAEc,MAAAA,OAAF;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA;AAApB,QAA6BjB,WAAW,CAAEkB,KAAD,IAAqBA,KAAK,CAACC,MAAN,CAAaf,KAAnC,CAA9C;AAEAC,IAAAA,SAAS,CAAC,MAAM;AACdS,MAAAA,QAAQ,CAACP,oBAAoB,EAArB,CAAR;AACAO,MAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACAM,MAAAA,QAAQ,CAACL,0BAA0B,EAA3B,CAAR;AACD,KAJQ,EAIN,EAJM,CAAT;AAMAJ,IAAAA,SAAS,CAAC,MAAM;AACd,UAAIU,OAAJ,EAAa;AACXX,QAAAA,KAAK,CAACa,IAAI,IAAI,MAAT,CAAL,CAAsBD,OAAtB,EAA+B;AAC7BI,UAAAA,QAAQ,EAAEhB,KAAK,CAACiB,QAAN,CAAeC,WADI;AAE7BC,UAAAA,OAAO,EAAE,MAAMT,QAAQ,CAACR,aAAa,CAACkB,SAAd,EAAD;AAFM,SAA/B;AAID;AACF,KAPQ,EAON,CAACT,OAAD,CAPM,CAAT;AASA,wBACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEjB,KAAtB;AAAA,8BACE,QAAC,SAAD,oBAAec,SAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAE,IAA3B;AAAiC,QAAA,KAAK,EAAE;AAAEa,UAAAA,SAAS,EAAE;AAAb;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAzBD;;AA2BA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEvB,KAAjB;AAAA,2BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,eAAeQ,KAAf","sourcesContent":["import { ThemeProvider } from 'styled-components';\nimport '@styles/styles.scss';\nimport theme from '@theme';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport store, { AppState } from '@store';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useEffect } from 'react';\nimport { commonActions } from '@store/slices/common';\nimport { handlePostCategories } from '@store/thunk/post';\nimport { handleGetCart } from '@store/thunk/cart';\nimport { handleGetProductCategories } from '@store/thunk/products';\n\nfunction MyApp({ Component, pageProps }: { Component: any; pageProps: any }) {\n  const WrappedComponent = () => {\n    const dispatch = useDispatch();\n    const { visible, message, type } = useSelector((state: AppState) => state.common.toast);\n\n    useEffect(() => {\n      dispatch(handlePostCategories());\n      dispatch(handleGetCart());\n      dispatch(handleGetProductCategories());\n    }, []);\n\n    useEffect(() => {\n      if (visible) {\n        toast[type || 'info'](message, {\n          position: toast.POSITION.BOTTOM_LEFT,\n          onClose: () => dispatch(commonActions.hideToast()),\n        });\n      }\n    }, [visible]);\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Component {...pageProps} />\n        <ToastContainer autoClose={1500} style={{ minHeight: 50 }} />\n      </ThemeProvider>\n    );\n  };\n\n  return (\n    <Provider store={store}>\n      <WrappedComponent />\n    </Provider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}