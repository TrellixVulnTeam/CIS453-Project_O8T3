{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  list: {\n    fetching: false,\n    data: []\n  }\n};\n\nvar getVideosListRequest = function getVideosListRequest(state) {\n  delete state.list.error;\n  state.list.fetching = true;\n};\n\nvar getVideosListSuccess = function getVideosListSuccess(state, _ref) {\n  var payload = _ref.payload;\n  state.list.data = payload.data;\n  state.list.fetching = false;\n  state.list.meta = payload.meta;\n};\n\nvar getVideosListFailed = function getVideosListFailed(state, _ref2) {\n  var payload = _ref2.payload;\n  state.list.fetching = false;\n  state.list.error = payload;\n};\n\nvar videosSlice = createSlice({\n  name: 'videos',\n  initialState: initialState,\n  reducers: {\n    getVideosListRequest: getVideosListRequest,\n    getVideosListSuccess: getVideosListSuccess,\n    getVideosListFailed: getVideosListFailed\n  }\n});\nexport var videoActions = videosSlice.actions;\nexport var videoReducer = videosSlice.reducer;","map":{"version":3,"sources":["C:/Users/Ian/Desktop/ECPI CIS/CIS453/Week 1/Lab/gute-main/main/source/src/store/slices/videos.ts"],"names":["createSlice","initialState","list","fetching","data","getVideosListRequest","state","error","getVideosListSuccess","payload","meta","getVideosListFailed","videosSlice","name","reducers","videoActions","actions","videoReducer","reducer"],"mappings":"AAAA,SAAsBA,WAAtB,QAAwD,kBAAxD;AAeA,IAAMC,YAAyB,GAAG;AAChCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,KADN;AAEJC,IAAAA,IAAI,EAAE;AAFF;AAD0B,CAAlC;;AAOA,IAAMC,oBAA0E,GAAG,SAA7EA,oBAA6E,CAACC,KAAD,EAAW;AAC5F,SAAOA,KAAK,CAACJ,IAAN,CAAWK,KAAlB;AACAD,EAAAA,KAAK,CAACJ,IAAN,CAAWC,QAAX,GAAsB,IAAtB;AACD,CAHD;;AAKA,IAAMK,oBAAuF,GAAG,SAA1FA,oBAA0F,CAC9FF,KAD8F,QAG3F;AAAA,MADDG,OACC,QADDA,OACC;AACHH,EAAAA,KAAK,CAACJ,IAAN,CAAWE,IAAX,GAAkBK,OAAO,CAACL,IAA1B;AACAE,EAAAA,KAAK,CAACJ,IAAN,CAAWC,QAAX,GAAsB,KAAtB;AACAG,EAAAA,KAAK,CAACJ,IAAN,CAAWQ,IAAX,GAAkBD,OAAO,CAACC,IAA1B;AACD,CAPD;;AASA,IAAMC,mBAAoE,GAAG,SAAvEA,mBAAuE,CAACL,KAAD,SAAwB;AAAA,MAAdG,OAAc,SAAdA,OAAc;AACnGH,EAAAA,KAAK,CAACJ,IAAN,CAAWC,QAAX,GAAsB,KAAtB;AACAG,EAAAA,KAAK,CAACJ,IAAN,CAAWK,KAAX,GAAmBE,OAAnB;AACD,CAHD;;AAKA,IAAMG,WAAW,GAAGZ,WAAW,CAAC;AAC9Ba,EAAAA,IAAI,EAAE,QADwB;AAE9BZ,EAAAA,YAAY,EAAZA,YAF8B;AAG9Ba,EAAAA,QAAQ,EAAE;AACRT,IAAAA,oBAAoB,EAApBA,oBADQ;AAERG,IAAAA,oBAAoB,EAApBA,oBAFQ;AAGRG,IAAAA,mBAAmB,EAAnBA;AAHQ;AAHoB,CAAD,CAA/B;AAUA,OAAO,IAAMI,YAAY,GAAGH,WAAW,CAACI,OAAjC;AACP,OAAO,IAAMC,YAAY,GAAGL,WAAW,CAACM,OAAjC","sourcesContent":["import { CaseReducer, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { QueryParams, ResponseState, ResponseStateDetail } from '@store/shared';\n\ninterface VideoItem {\n  id: number;\n  title: string;\n  url: string;\n  duration: 212;\n  thumbnail: string;\n}\n\ninterface VideosState {\n  list: ResponseState<VideoItem>;\n}\n\nconst initialState: VideosState = {\n  list: {\n    fetching: false,\n    data: [],\n  },\n};\n\nconst getVideosListRequest: CaseReducer<VideosState, PayloadAction<QueryParams>> = (state) => {\n  delete state.list.error;\n  state.list.fetching = true;\n};\n\nconst getVideosListSuccess: CaseReducer<VideosState, PayloadAction<ResponseState<VideoItem>>> = (\n  state,\n  { payload },\n) => {\n  state.list.data = payload.data;\n  state.list.fetching = false;\n  state.list.meta = payload.meta;\n};\n\nconst getVideosListFailed: CaseReducer<VideosState, PayloadAction<string>> = (state, { payload }) => {\n  state.list.fetching = false;\n  state.list.error = payload;\n};\n\nconst videosSlice = createSlice({\n  name: 'videos',\n  initialState,\n  reducers: {\n    getVideosListRequest,\n    getVideosListSuccess,\n    getVideosListFailed,\n  },\n});\n\nexport const videoActions = videosSlice.actions;\nexport const videoReducer = videosSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}