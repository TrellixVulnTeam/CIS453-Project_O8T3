{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ian\\\\Desktop\\\\ECPI CIS\\\\CIS453\\\\Week 1\\\\Lab\\\\gute-main\\\\main\\\\source\\\\src\\\\components\\\\other\\\\customed-checkbox.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { renderThemeClass } from '@common/functions';\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\nvar CustomedCheckbox = function CustomedCheckbox(_ref) {\n  _s();\n\n  var label = _ref.label,\n      value = _ref.value,\n      _ref$shape = _ref.shape,\n      shape = _ref$shape === void 0 ? 'round' : _ref$shape,\n      defaultValue = _ref.defaultValue,\n      className = _ref.className,\n      theme = _ref.theme,\n      _onChange = _ref.onChange;\n\n  var _useState = useState(defaultValue),\n      checked = _useState[0],\n      setChecked = _useState[1];\n\n  useEffect(function () {\n    setChecked(value);\n  }, [value]);\n  var r = Math.random().toString(36).substring(7);\n\n  var renderShape = function renderShape() {\n    return '-' + shape;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: 'checkbox-' + r,\n    className: classNames('checkbox-group customed', renderShape(), renderThemeClass(theme), className),\n    children: [label, /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: function onChange() {\n        if (!value) {\n          setChecked(!checked);\n        }\n\n        _onChange === null || _onChange === void 0 ? void 0 : _onChange(!checked);\n      },\n      type: \"checkbox\",\n      id: 'checkbox-' + r,\n      checked: checked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"checkmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CustomedCheckbox, \"DpWtzgtR7qPdDbNSBBiSgQfPQSY=\");\n\n_c = CustomedCheckbox;\nexport default CustomedCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomedCheckbox\");","map":{"version":3,"sources":["C:/Users/Ian/Desktop/ECPI CIS/CIS453/Week 1/Lab/gute-main/main/source/src/components/other/customed-checkbox.tsx"],"names":["renderThemeClass","classNames","React","useEffect","useState","CustomedCheckbox","label","value","shape","defaultValue","className","theme","onChange","checked","setChecked","r","Math","random","toString","substring","renderShape"],"mappings":";;;;;;AACA,SAASA,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAYA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAQI;AAAA;;AAAA,MAP3BC,KAO2B,QAP3BA,KAO2B;AAAA,MAN3BC,KAM2B,QAN3BA,KAM2B;AAAA,wBAL3BC,KAK2B;AAAA,MAL3BA,KAK2B,2BALnB,OAKmB;AAAA,MAJ3BC,YAI2B,QAJ3BA,YAI2B;AAAA,MAH3BC,SAG2B,QAH3BA,SAG2B;AAAA,MAF3BC,KAE2B,QAF3BA,KAE2B;AAAA,MAD3BC,SAC2B,QAD3BA,QAC2B;;AAAA,kBACGR,QAAQ,CAACK,YAAD,CADX;AAAA,MACpBI,OADoB;AAAA,MACXC,UADW;;AAG3BX,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,UAAU,CAACP,KAAD,CAAV;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,MAAMQ,CAAC,GAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAV;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAM,MAAMZ,KAAZ;AAAA,GAApB;;AAEA,sBACE;AACE,IAAA,OAAO,EAAE,cAAcO,CADzB;AAEE,IAAA,SAAS,EAAEd,UAAU,CAAC,yBAAD,EAA4BmB,WAAW,EAAvC,EAA2CpB,gBAAgB,CAACW,KAAD,CAA3D,EAAoED,SAApE,CAFvB;AAAA,eAGGJ,KAHH,eAIE;AACE,MAAA,QAAQ,EAAE,oBAAM;AACd,YAAI,CAACC,KAAL,EAAY;AACVO,UAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD;;AACDD,QAAAA,SAAQ,SAAR,IAAAA,SAAQ,WAAR,YAAAA,SAAQ,CAAG,CAACC,OAAJ,CAAR;AACD,OANH;AAOE,MAAA,IAAI,EAAC,UAPP;AAQE,MAAA,EAAE,EAAE,cAAcE,CARpB;AASE,MAAA,OAAO,EAAEF;AATX;AAAA;AAAA;AAAA;AAAA,aAJF,eAeE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,aAfF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAmBD,CAtCD;;GAAMR,gB;;KAAAA,gB;AAwCN,eAAeA,gBAAf","sourcesContent":["import { ThemeVariation } from '@common/enum';\nimport { renderThemeClass } from '@common/functions';\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\ninterface CustomedCheckboxProps {\n  label: string;\n  defaultValue?: boolean;\n  value?: boolean;\n  className?: string;\n  theme?: ThemeVariation;\n  shape?: 'round' | 'circle';\n  onChange?: (p: boolean) => void;\n}\n\nconst CustomedCheckbox = ({\n  label,\n  value,\n  shape = 'round',\n  defaultValue,\n  className,\n  theme,\n  onChange,\n}: CustomedCheckboxProps) => {\n  const [checked, setChecked] = useState(defaultValue);\n\n  useEffect(() => {\n    setChecked(value);\n  }, [value]);\n\n  const r = Math.random().toString(36).substring(7);\n\n  const renderShape = () => '-' + shape;\n\n  return (\n    <label\n      htmlFor={'checkbox-' + r}\n      className={classNames('checkbox-group customed', renderShape(), renderThemeClass(theme), className)}>\n      {label}\n      <input\n        onChange={() => {\n          if (!value) {\n            setChecked(!checked);\n          }\n          onChange?.(!checked);\n        }}\n        type=\"checkbox\"\n        id={'checkbox-' + r}\n        checked={checked}\n      />\n      <span className=\"checkmark\" />\n    </label>\n  );\n};\n\nexport default CustomedCheckbox;\n"]},"metadata":{},"sourceType":"module"}