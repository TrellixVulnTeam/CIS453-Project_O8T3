{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Formik } from 'formik';\nimport React from 'react';\nimport * as Yup from 'yup';\nimport GUButton from '@components/control/gu-button';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport { renderThemeClass } from '@common/functions';\nconst FormSchema = Yup.object().shape({\n  email: Yup.string().email('Please type validate email format').required('Please provide an email')\n});\nconst StyledGUButton = styled(GUButton)`\n  text-transform: uppercase;\n`;\n\nconst SubcribeCard = (_ref) => {\n  let {\n    theme,\n    colored\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"theme\", \"colored\"]);\n\n  return /*#__PURE__*/_jsx(Formik, _objectSpread(_objectSpread({\n    validationSchema: FormSchema,\n    initialValues: {\n      email: ''\n    }\n  }, props), {}, {\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    }) => /*#__PURE__*/_jsxs(\"form\", {\n      className: classNames('subcribe-card', renderThemeClass(theme), {\n        '-colored': colored\n      }),\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsx(\"h5\", {\n        children: \"Subcribe\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: \"Lorem ipsum dolor amet, consectetur adipiscing elit, sed tempor.\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email,\n          placeholder: \"Enter your email\"\n        }), errors.email && touched.email && /*#__PURE__*/_jsx(\"span\", {\n          children: errors.email\n        })]\n      }), /*#__PURE__*/_jsx(StyledGUButton, {\n        weight: \"medium\",\n        buttonType: \"submit\",\n        variant: \"contained\",\n        color: theme,\n        shape: \"round\",\n        size: \"small\",\n        fullwidth: true,\n        children: \"Subcribe\"\n      })]\n    })\n  }));\n};\n\nexport default SubcribeCard;","map":null,"metadata":{},"sourceType":"module"}