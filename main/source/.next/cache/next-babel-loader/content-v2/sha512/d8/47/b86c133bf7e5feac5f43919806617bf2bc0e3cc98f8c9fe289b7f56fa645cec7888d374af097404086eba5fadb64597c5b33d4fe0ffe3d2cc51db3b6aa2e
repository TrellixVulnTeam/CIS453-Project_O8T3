{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport let PostCoverType;\n\n(function (PostCoverType) {\n  PostCoverType[\"IMAGE\"] = \"image\";\n  PostCoverType[\"AUDIO\"] = \"audio\";\n  PostCoverType[\"VIDEO\"] = \"video\";\n  PostCoverType[\"SLIDE\"] = \"slide\";\n  PostCoverType[\"SPLIT\"] = \"split\";\n})(PostCoverType || (PostCoverType = {}));\n\nexport let PostCategoriesType;\n\n(function (PostCategoriesType) {\n  PostCategoriesType[\"Bar\"] = \"bar\";\n})(PostCategoriesType || (PostCategoriesType = {}));\n\nconst initialState = {\n  list: {\n    fetching: false,\n    data: []\n  },\n  related: {\n    fetching: false,\n    data: []\n  },\n  destination: {\n    fetching: false,\n    data: []\n  },\n  guide: {\n    fetching: false,\n    data: []\n  },\n  lastest: {\n    fetching: false,\n    data: []\n  },\n  trendingList: {\n    fetching: false,\n    data: []\n  },\n  detail: {\n    fetching: false\n  },\n  footerList: {\n    fetching: false,\n    data: []\n  },\n  categories: {\n    fetching: false,\n    data: []\n  }\n};\n\nconst getPostsListRequest = (state, {\n  payload\n}) => {\n  if (payload.loadingMore) {\n    state.list.loadingMore = true;\n    return;\n  }\n\n  state.list.fetching = true;\n  delete state.list.error;\n};\n\nconst getPostsListSuccess = (state, {\n  payload\n}) => {\n  if (state.list.loadingMore) {\n    state.list.data = [...state.list.data, ...payload.data];\n    state.list.loadingMore = false;\n  } else {\n    state.list.data = payload.data;\n    state.list.fetching = false;\n  }\n\n  state.list.meta = payload.meta;\n};\n\nconst getPostsListFailed = (state, {\n  payload\n}) => {\n  state.list.loadingMore = false;\n  state.list.fetching = false;\n  state.list.error = payload;\n};\n\nconst getFooterPostsRequest = state => {\n  delete state.footerList.error;\n  state.footerList.fetching = true;\n};\n\nconst getFooterPostsSuccess = (state, {\n  payload\n}) => {\n  state.footerList.data = payload.data;\n  state.footerList.fetching = false;\n  state.footerList.meta = payload.meta;\n};\n\nconst getFooterPostsFailed = (state, {\n  payload\n}) => {\n  state.footerList.fetching = false;\n  state.footerList.error = payload;\n};\n\nconst getPostDetailRequest = state => {\n  state.detail.fetching = true;\n};\n\nconst getPostDetailSuccess = (state, {\n  payload\n}) => {\n  state.detail.fetching = false;\n  state.detail.data = payload;\n};\n\nconst getPostDetailFailed = (state, {\n  payload\n}) => {\n  state.detail.fetching = false;\n  state.detail.error = payload;\n};\n\nconst getPostCategoriesRequest = state => {\n  delete state.categories.error;\n  state.categories.fetching = true;\n};\n\nconst getPostCategoriesSuccess = (state, {\n  payload\n}) => {\n  state.categories.data = payload.data;\n  state.categories.fetching = false;\n};\n\nconst getPostCategoriesFailed = (state, {\n  payload\n}) => {\n  state.categories.fetching = false;\n  state.categories.error = payload;\n};\n\nconst getTrendingPostsRequest = state => {\n  delete state.trendingList.error;\n  state.trendingList.fetching = true;\n};\n\nconst getTrendingPostsSuccess = (state, {\n  payload\n}) => {\n  state.trendingList.data = payload.data;\n  state.trendingList.fetching = false;\n};\n\nconst getTrendingPostsFailed = (state, {\n  payload\n}) => {\n  state.trendingList.fetching = false;\n  state.trendingList.error = payload;\n};\n\nconst getDestinationPostsRequest = state => {\n  delete state.destination.error;\n  state.destination.fetching = true;\n};\n\nconst getDestinationPostsSuccess = (state, {\n  payload\n}) => {\n  state.destination.data = payload.data;\n  state.destination.fetching = false;\n  state.destination.meta = payload.meta;\n};\n\nconst getDestinationPostsFailed = (state, {\n  payload\n}) => {\n  state.destination.fetching = false;\n  state.destination.error = payload;\n};\n\nconst getGuidePostsRequest = state => {\n  delete state.guide.error;\n  state.guide.fetching = true;\n};\n\nconst getGuidePostsSuccess = (state, {\n  payload\n}) => {\n  state.guide.data = payload.data;\n  state.guide.fetching = false;\n  state.guide.meta = payload.meta;\n};\n\nconst getGuidePostsFailed = (state, {\n  payload\n}) => {\n  state.guide.fetching = false;\n  state.guide.error = payload;\n};\n\nconst getLastestPostsRequest = state => {\n  delete state.lastest.error;\n  state.lastest.fetching = true;\n};\n\nconst getLastestPostsSuccess = (state, {\n  payload\n}) => {\n  state.lastest.data = payload.data;\n  state.lastest.fetching = false;\n  state.lastest.meta = payload.meta;\n};\n\nconst getLastestPostsFailed = (state, {\n  payload\n}) => {\n  state.lastest.fetching = false;\n  state.lastest.error = payload;\n};\n\nconst getRelatedPostsRequest = state => {\n  delete state.related.error;\n  state.related.fetching = true;\n};\n\nconst getRelatedPostsSuccess = (state, {\n  payload\n}) => {\n  state.related.data = payload.data;\n  state.related.fetching = false;\n  state.related.meta = payload.meta;\n};\n\nconst getRelatedtPostsFailed = (state, {\n  payload\n}) => {\n  state.related.fetching = false;\n  state.related.error = payload;\n};\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    getPostsListRequest,\n    getPostsListSuccess,\n    getPostsListFailed,\n    getPostDetailRequest,\n    getPostDetailSuccess,\n    getPostDetailFailed,\n    getFooterPostsRequest,\n    getFooterPostsSuccess,\n    getFooterPostsFailed,\n    getPostCategoriesRequest,\n    getPostCategoriesSuccess,\n    getPostCategoriesFailed,\n    getTrendingPostsRequest,\n    getTrendingPostsSuccess,\n    getTrendingPostsFailed,\n    getDestinationPostsRequest,\n    getDestinationPostsSuccess,\n    getDestinationPostsFailed,\n    getGuidePostsRequest,\n    getGuidePostsSuccess,\n    getGuidePostsFailed,\n    getLastestPostsRequest,\n    getLastestPostsSuccess,\n    getLastestPostsFailed,\n    getRelatedPostsRequest,\n    getRelatedPostsSuccess,\n    getRelatedtPostsFailed\n  }\n});\nexport const postActions = postsSlice.actions;\nexport const postReducer = postsSlice.reducer;","map":null,"metadata":{},"sourceType":"module"}