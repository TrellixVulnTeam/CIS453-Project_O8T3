{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport let PostCoverType;\n\n(function (PostCoverType) {\n  PostCoverType[\"IMAGE\"] = \"image\";\n  PostCoverType[\"AUDIO\"] = \"audio\";\n  PostCoverType[\"VIDEO\"] = \"video\";\n  PostCoverType[\"SLIDE\"] = \"slide\";\n  PostCoverType[\"SPLIT\"] = \"split\";\n})(PostCoverType || (PostCoverType = {}));\n\nexport let PostCategoriesType;\n\n(function (PostCategoriesType) {\n  PostCategoriesType[\"Bar\"] = \"bar\";\n})(PostCategoriesType || (PostCategoriesType = {}));\n\nconst initialState = {\n  list: {\n    fetching: false,\n    data: []\n  },\n  related: {\n    fetching: false,\n    data: []\n  },\n  destination: {\n    fetching: false,\n    data: []\n  },\n  guide: {\n    fetching: false,\n    data: []\n  },\n  lastest: {\n    fetching: false,\n    data: []\n  },\n  trendingList: {\n    fetching: false,\n    data: []\n  },\n  detail: {\n    fetching: false\n  },\n  footerList: {\n    fetching: false,\n    data: []\n  },\n  categories: {\n    fetching: false,\n    data: []\n  }\n};\n\nconst getPostsListRequest = (state, {\n  payload\n}) => {\n  if (payload.loadingMore) {\n    state.list.loadingMore = true;\n    return;\n  }\n\n  state.list.fetching = true;\n  delete state.list.error;\n};\n\nconst getPostsListSuccess = (state, {\n  payload\n}) => {\n  if (state.list.loadingMore) {\n    state.list.data = [...state.list.data, ...payload.data];\n    state.list.loadingMore = false;\n  } else {\n    state.list.data = payload.data;\n    state.list.fetching = false;\n  }\n\n  state.list.meta = payload.meta;\n};\n\nconst getPostsListFailed = (state, {\n  payload\n}) => {\n  state.list.loadingMore = false;\n  state.list.fetching = false;\n  state.list.error = payload;\n};\n\nconst getFooterPostsRequest = state => {\n  delete state.footerList.error;\n  state.footerList.fetching = true;\n};\n\nconst getFooterPostsSuccess = (state, {\n  payload\n}) => {\n  state.footerList.data = payload.data;\n  state.footerList.fetching = false;\n  state.footerList.meta = payload.meta;\n};\n\nconst getFooterPostsFailed = (state, {\n  payload\n}) => {\n  state.footerList.fetching = false;\n  state.footerList.error = payload;\n};\n\nconst getPostDetailRequest = state => {\n  state.detail.fetching = true;\n};\n\nconst getPostDetailSuccess = (state, {\n  payload\n}) => {\n  state.detail.fetching = false;\n  state.detail.data = payload;\n};\n\nconst getPostDetailFailed = (state, {\n  payload\n}) => {\n  state.detail.fetching = false;\n  state.detail.error = payload;\n};\n\nconst getPostCategoriesRequest = state => {\n  delete state.categories.error;\n  state.categories.fetching = true;\n};\n\nconst getPostCategoriesSuccess = (state, {\n  payload\n}) => {\n  state.categories.data = payload.data;\n  state.categories.fetching = false;\n};\n\nconst getPostCategoriesFailed = (state, {\n  payload\n}) => {\n  state.categories.fetching = false;\n  state.categories.error = payload;\n};\n\nconst getTrendingPostsRequest = state => {\n  delete state.trendingList.error;\n  state.trendingList.fetching = true;\n};\n\nconst getTrendingPostsSuccess = (state, {\n  payload\n}) => {\n  state.trendingList.data = payload.data;\n  state.trendingList.fetching = false;\n};\n\nconst getTrendingPostsFailed = (state, {\n  payload\n}) => {\n  state.trendingList.fetching = false;\n  state.trendingList.error = payload;\n};\n\nconst getDestinationPostsRequest = state => {\n  delete state.destination.error;\n  state.destination.fetching = true;\n};\n\nconst getDestinationPostsSuccess = (state, {\n  payload\n}) => {\n  state.destination.data = payload.data;\n  state.destination.fetching = false;\n  state.destination.meta = payload.meta;\n};\n\nconst getDestinationPostsFailed = (state, {\n  payload\n}) => {\n  state.destination.fetching = false;\n  state.destination.error = payload;\n};\n\nconst getGuidePostsRequest = state => {\n  delete state.guide.error;\n  state.guide.fetching = true;\n};\n\nconst getGuidePostsSuccess = (state, {\n  payload\n}) => {\n  state.guide.data = payload.data;\n  state.guide.fetching = false;\n  state.guide.meta = payload.meta;\n};\n\nconst getGuidePostsFailed = (state, {\n  payload\n}) => {\n  state.guide.fetching = false;\n  state.guide.error = payload;\n};\n\nconst getLastestPostsRequest = state => {\n  delete state.lastest.error;\n  state.lastest.fetching = true;\n};\n\nconst getLastestPostsSuccess = (state, {\n  payload\n}) => {\n  state.lastest.data = payload.data;\n  state.lastest.fetching = false;\n  state.lastest.meta = payload.meta;\n};\n\nconst getLastestPostsFailed = (state, {\n  payload\n}) => {\n  state.lastest.fetching = false;\n  state.lastest.error = payload;\n};\n\nconst getRelatedPostsRequest = state => {\n  delete state.related.error;\n  state.related.fetching = true;\n};\n\nconst getRelatedPostsSuccess = (state, {\n  payload\n}) => {\n  state.related.data = payload.data;\n  state.related.fetching = false;\n  state.related.meta = payload.meta;\n};\n\nconst getRelatedtPostsFailed = (state, {\n  payload\n}) => {\n  state.related.fetching = false;\n  state.related.error = payload;\n};\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    getPostsListRequest,\n    getPostsListSuccess,\n    getPostsListFailed,\n    getPostDetailRequest,\n    getPostDetailSuccess,\n    getPostDetailFailed,\n    getFooterPostsRequest,\n    getFooterPostsSuccess,\n    getFooterPostsFailed,\n    getPostCategoriesRequest,\n    getPostCategoriesSuccess,\n    getPostCategoriesFailed,\n    getTrendingPostsRequest,\n    getTrendingPostsSuccess,\n    getTrendingPostsFailed,\n    getDestinationPostsRequest,\n    getDestinationPostsSuccess,\n    getDestinationPostsFailed,\n    getGuidePostsRequest,\n    getGuidePostsSuccess,\n    getGuidePostsFailed,\n    getLastestPostsRequest,\n    getLastestPostsSuccess,\n    getLastestPostsFailed,\n    getRelatedPostsRequest,\n    getRelatedPostsSuccess,\n    getRelatedtPostsFailed\n  }\n});\nexport const postActions = postsSlice.actions;\nexport const postReducer = postsSlice.reducer;","map":{"version":3,"sources":["C:/Users/Ian/Desktop/ECPI CIS/CIS453/Week 1/Lab/gute-main/main/source/src/store/slices/posts.ts"],"names":["createSlice","PostCoverType","PostCategoriesType","initialState","list","fetching","data","related","destination","guide","lastest","trendingList","detail","footerList","categories","getPostsListRequest","state","payload","loadingMore","error","getPostsListSuccess","meta","getPostsListFailed","getFooterPostsRequest","getFooterPostsSuccess","getFooterPostsFailed","getPostDetailRequest","getPostDetailSuccess","getPostDetailFailed","getPostCategoriesRequest","getPostCategoriesSuccess","getPostCategoriesFailed","getTrendingPostsRequest","getTrendingPostsSuccess","getTrendingPostsFailed","getDestinationPostsRequest","getDestinationPostsSuccess","getDestinationPostsFailed","getGuidePostsRequest","getGuidePostsSuccess","getGuidePostsFailed","getLastestPostsRequest","getLastestPostsSuccess","getLastestPostsFailed","getRelatedPostsRequest","getRelatedPostsSuccess","getRelatedtPostsFailed","postsSlice","name","reducers","postActions","actions","postReducer","reducer"],"mappings":"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","sourcesContent":["import { CaseReducer, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { QueryParams, ResponseState, ResponseStateDetail } from '@store/shared';\nimport { AuthorItem } from './author';\n\nexport enum PostCoverType {\n  IMAGE = 'image',\n  AUDIO = 'audio',\n  VIDEO = 'video',\n  SLIDE = 'slide',\n  SPLIT = 'split',\n}\n\nexport interface UserItem {\n  id?: number;\n  name: string;\n  avatar: string | null;\n}\nexport interface PostCommentItem {\n  id: 1;\n  publicDate: Date;\n  favourite: number;\n  shared: number;\n  content: string;\n  user: UserItem;\n  replies: Omit<PostCommentItem, 'replies'>[];\n}\n\nexport interface PostTagItem {\n  id: number;\n  name: string;\n}\nexport interface PostItem {\n  id?: number;\n  image?: string | string[];\n  category: PostItemCategory;\n  title?: string;\n  publicDate?: Date;\n  commentsCount?: number;\n  quote?: string;\n  author?: string;\n  audio?: string;\n  video?: string;\n  description?: string;\n  type?: PostCoverType;\n  comments?: PostCommentItem[];\n  tags?: PostTagItem[];\n  user: AuthorItem;\n}\n\nexport interface PostItemCategory {\n  id: number;\n  image: string;\n  name: string;\n  key: string;\n  quantity: number;\n}\n\nexport enum PostCategoriesType {\n  Bar = 'bar',\n}\nexport interface GetPostCategoriesParams extends QueryParams {}\n\nexport interface GetPostListParams extends QueryParams {\n  type_like?: string;\n  isTrending_like?: boolean;\n  'category.id_like'?: number | string | null;\n}\n\nexport interface GetPostListMaronryParams extends GetPostListParams {\n  isWide?: boolean;\n}\n\ninterface PostsState {\n  list: ResponseState<PostItem>;\n  related: ResponseState<PostItem>;\n  destination: ResponseState<PostItem>;\n  guide: ResponseState<PostItem>;\n  lastest: ResponseState<PostItem>;\n  trendingList: ResponseState<PostItem>;\n  detail: ResponseStateDetail<PostItem>;\n  footerList: ResponseState<PostItem>;\n  categories: ResponseState<PostItemCategory>;\n}\n\nconst initialState: PostsState = {\n  list: { fetching: false, data: [] },\n  related: { fetching: false, data: [] },\n  destination: { fetching: false, data: [] },\n  guide: { fetching: false, data: [] },\n  lastest: { fetching: false, data: [] },\n  trendingList: { fetching: false, data: [] },\n  detail: { fetching: false },\n  footerList: { fetching: false, data: [] },\n  categories: { fetching: false, data: [] },\n};\n\nconst getPostsListRequest: CaseReducer<PostsState, PayloadAction<GetPostListParams>> = (state, { payload }) => {\n  if (payload.loadingMore) {\n    state.list.loadingMore = true;\n    return;\n  }\n  state.list.fetching = true;\n  delete state.list.error;\n};\n\nconst getPostsListSuccess: CaseReducer<PostsState, PayloadAction<ResponseState<PostItem>>> = (state, { payload }) => {\n  if (state.list.loadingMore) {\n    state.list.data = [...state.list.data, ...payload.data];\n    state.list.loadingMore = false;\n  } else {\n    state.list.data = payload.data;\n    state.list.fetching = false;\n  }\n  state.list.meta = payload.meta;\n};\n\nconst getPostsListFailed: CaseReducer<PostsState, PayloadAction<string>> = (state, { payload }) => {\n  state.list.loadingMore = false;\n  state.list.fetching = false;\n  state.list.error = payload;\n};\n\nconst getFooterPostsRequest: CaseReducer<PostsState, PayloadAction<GetPostListParams>> = (state) => {\n  delete state.footerList.error;\n  state.footerList.fetching = true;\n};\n\nconst getFooterPostsSuccess: CaseReducer<PostsState, PayloadAction<ResponseState<PostItem>>> = (state, { payload }) => {\n  state.footerList.data = payload.data;\n  state.footerList.fetching = false;\n  state.footerList.meta = payload.meta;\n};\n\nconst getFooterPostsFailed: CaseReducer<PostsState, PayloadAction<string>> = (state, { payload }) => {\n  state.footerList.fetching = false;\n  state.footerList.error = payload;\n};\n\nconst getPostDetailRequest: CaseReducer<PostsState> = (state) => {\n  state.detail.fetching = true;\n};\n\nconst getPostDetailSuccess: CaseReducer<PostsState, PayloadAction<PostItem>> = (state, { payload }) => {\n  state.detail.fetching = false;\n  state.detail.data = payload;\n};\n\nconst getPostDetailFailed: CaseReducer<PostsState, PayloadAction<string>> = (state, { payload }) => {\n  state.detail.fetching = false;\n  state.detail.error = payload;\n};\n\nconst getPostCategoriesRequest: CaseReducer<PostsState> = (state) => {\n  delete state.categories.error;\n  state.categories.fetching = true;\n};\n\nconst getPostCategoriesSuccess: CaseReducer<PostsState, PayloadAction<ResponseState<PostItemCategory>>> = (\n  state,\n  { payload },\n) => {\n  state.categories.data = payload.data;\n  state.categories.fetching = false;\n};\n\nconst getPostCategoriesFailed: CaseReducer<PostsState, PayloadAction<string>> = (state, { payload }) => {\n  state.categories.fetching = false;\n  state.categories.error = payload;\n};\n\nconst getTrendingPostsRequest: CaseReducer<PostsState> = (state) => {\n  delete state.trendingList.error;\n  state.trendingList.fetching = true;\n};\n\nconst getTrendingPostsSuccess: CaseReducer<PostsState, PayloadAction<ResponseState<PostItem>>> = (\n  state,\n  { payload },\n) => {\n  state.trendingList.data = payload.data;\n  state.trendingList.fetching = false;\n};\n\nconst getTrendingPostsFailed: CaseReducer<PostsState, PayloadAction<string>> = (state, { payload }) => {\n  state.trendingList.fetching = false;\n  state.trendingList.error = payload;\n};\n\nconst getDestinationPostsRequest: CaseReducer<PostsState> = (state) => {\n  delete state.destination.error;\n  state.destination.fetching = true;\n};\n\nconst getDestinationPostsSuccess: CaseReducer<PostsState, PayloadAction<ResponseState<PostItem>>> = (\n  state,\n  { payload },\n) => {\n  state.destination.data = payload.data;\n  state.destination.fetching = false;\n  state.destination.meta = payload.meta;\n};\n\nconst getDestinationPostsFailed: CaseReducer<PostsState, PayloadAction<string>> = (state, { payload }) => {\n  state.destination.fetching = false;\n  state.destination.error = payload;\n};\n\nconst getGuidePostsRequest: CaseReducer<PostsState> = (state) => {\n  delete state.guide.error;\n  state.guide.fetching = true;\n};\n\nconst getGuidePostsSuccess: CaseReducer<PostsState, PayloadAction<ResponseState<PostItem>>> = (state, { payload }) => {\n  state.guide.data = payload.data;\n  state.guide.fetching = false;\n  state.guide.meta = payload.meta;\n};\n\nconst getGuidePostsFailed: CaseReducer<PostsState, PayloadAction<string>> = (state, { payload }) => {\n  state.guide.fetching = false;\n  state.guide.error = payload;\n};\n\nconst getLastestPostsRequest: CaseReducer<PostsState> = (state) => {\n  delete state.lastest.error;\n  state.lastest.fetching = true;\n};\n\nconst getLastestPostsSuccess: CaseReducer<PostsState, PayloadAction<ResponseState<PostItem>>> = (\n  state,\n  { payload },\n) => {\n  state.lastest.data = payload.data;\n  state.lastest.fetching = false;\n  state.lastest.meta = payload.meta;\n};\n\nconst getLastestPostsFailed: CaseReducer<PostsState, PayloadAction<string>> = (state, { payload }) => {\n  state.lastest.fetching = false;\n  state.lastest.error = payload;\n};\n\nconst getRelatedPostsRequest: CaseReducer<PostsState> = (state) => {\n  delete state.related.error;\n  state.related.fetching = true;\n};\n\nconst getRelatedPostsSuccess: CaseReducer<PostsState, PayloadAction<ResponseState<PostItem>>> = (\n  state,\n  { payload },\n) => {\n  state.related.data = payload.data;\n  state.related.fetching = false;\n  state.related.meta = payload.meta;\n};\n\nconst getRelatedtPostsFailed: CaseReducer<PostsState, PayloadAction<string>> = (state, { payload }) => {\n  state.related.fetching = false;\n  state.related.error = payload;\n};\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    getPostsListRequest,\n    getPostsListSuccess,\n    getPostsListFailed,\n\n    getPostDetailRequest,\n    getPostDetailSuccess,\n    getPostDetailFailed,\n\n    getFooterPostsRequest,\n    getFooterPostsSuccess,\n    getFooterPostsFailed,\n\n    getPostCategoriesRequest,\n    getPostCategoriesSuccess,\n    getPostCategoriesFailed,\n\n    getTrendingPostsRequest,\n    getTrendingPostsSuccess,\n    getTrendingPostsFailed,\n\n    getDestinationPostsRequest,\n    getDestinationPostsSuccess,\n    getDestinationPostsFailed,\n\n    getGuidePostsRequest,\n    getGuidePostsSuccess,\n    getGuidePostsFailed,\n\n    getLastestPostsRequest,\n    getLastestPostsSuccess,\n    getLastestPostsFailed,\n\n    getRelatedPostsRequest,\n    getRelatedPostsSuccess,\n    getRelatedtPostsFailed,\n  },\n});\n\nexport const postActions = postsSlice.actions;\nexport const postReducer = postsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}